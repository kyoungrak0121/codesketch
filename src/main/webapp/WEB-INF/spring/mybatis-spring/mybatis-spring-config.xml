<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	
	
	<!-- setting the .property -->
	<!-- beans 태그 안에  xmlns:context="http://www.springframework.org/schema/context 추가" -->
	<context:property-placeholder location="classpath:META-INF/properties/jdbc.properties"/>
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- dataSource : 설정 정보 읽어서 SqlSessionFactory 만드는 역할  -->
	<bean id="dataSourceSpied" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- 로그 설정 -->
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
        <constructor-arg ref="dataSourceSpied" />
        <property name="logFormatter">
            <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
                <property name="loggingType" value="MULTI_LINE" />
                <property name="sqlPrefix" value="SQL         :  "/>
            </bean>
        </property>
    </bean>
    
	<!-- SqlSession을 만드는 역할 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		
<!--
		<property name="transactionFactory">
  			<bean class="org.apache.ibatis.transaction.managed.ManagedTransactionFactory" />
		</property>  
--> 
		<!-- configuration load -->
		<!-- <property name="configLocation" value="classpath:META-INF/properties/mybatis-properties.xml" /> -->
		<property name="configuration">
		    <bean class="org.apache.ibatis.session.Configuration">
		    <!-- 
		    	<property name="cacheEnabled" value="true"/>				 
			-->
				<property name="defaultStatementTimeout" value="25000"/>
		    </bean>
		</property>
  	
  		<!-- dto setting -->
		<property name="typeAliasesPackage" value="org.spring.code.vo.dto" />
		
		<!-- mapper setting -->		
		<property name="mapperLocations" value="classpath:META-INF/mappers/**/*.xml" />
	</bean>

	<!-- 실제 sql을 날라기 위해 필요  -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	<!-- 
  		<constructor-arg index="1" value="BATCH" />
  	 -->
	</bean>
	
	<!-- transaction 을 관리하기 위함 --> 
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
	<!-- mybatis transaction 설정  -->
	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager" />
	
</beans>
